(require 'package)(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t);; Comment/uncomment this line to enable MELPA Stable if desired.  See `package-archive-priorities`;; and `package-pinned-packages`. Most users will not need or want to do this.;;(add-to-list 'package-archives '("melpa-stable" . "https://stable.melpa.org/packages/") t)(package-initialize)(custom-set-variables ;; custom-set-variables was added by Custom. ;; If you edit it by hand, you could mess it up, so be careful. ;; Your init file should contain only one such instance. ;; If there is more than one, they won't work right. '(custom-safe-themes   (quote    ("2f1518e906a8b60fac943d02ad415f1d8b3933a5a7f75e307e6e9a26ef5bf570" "69e5703b797b116bb6d829709bb2a1a5a38e23b2b05d8f58e24c9a5594977065" default))) '(package-selected-packages   (quote    (treemacs dashboard projectile helm doom-modeline doom-themes which-key use-package nova-theme))))(custom-set-faces ;; custom-set-faces was added by Custom. ;; If you edit it by hand, you could mess it up, so be careful. ;; Your init file should contain only one such instance. ;; If there is more than one, they won't work right. '(default ((t (:inherit nil :stipple nil :background "#282c34" :foreground "#bbc2cf" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 102 :width normal :foundry "PfEd" :family "InconsolataGo Nerd Font Mono")))));;(load-theme 'nova t)(unless (package-installed-p 'use-package)  (package-refresh-contents)  (package-install 'use-package));; move below(use-package which-key  :ensure t  :config (which-key-mode))(use-package doom-themes  :ensure t  :config  (load-theme 'doom-one))(use-package doom-modeline  :ensure t  :hook (after-init . doom-modeline-mode))(use-package all-the-icons  :ensure t);; Don't show startup up message(setq inhibit-startup-message t);; Don't show toolbar at the top (tool-bar-mode -1);; Don't show menu(menu-bar-mode -1);; Don't show scroll bar(scroll-bar-mode -1);; Highlight currently editing line(global-hl-line-mode +1);; Delete text after selecting(delete-selection-mode 1);; Use a different backup directory(setq backup-directory-alist '(("." . "~/.saves")));; Display line numbers when using programming mode(add-hook 'prog-mode-hook 'display-line-numbers-mode);; Show matching parenthesis(show-paren-mode 1);; ido(setq ido-everywhere t)(setq ido-enable-flex-matching t)(ido-mode t)(use-package projectile  :ensure t  :config  (define-key projectile-mode-map (kbd "C-x p") 'projectile-command-map)  (projectile-mode +1))(use-package dashboard  :ensure t  :init  (progn    (setq dashboard-items '((recents . 1)			    (projects . 1)))    (setq dashboard-show-shortcuts nil)    (setq dashboard-center-contents nil)    (setq dashboard-banner-logo-title "HACK AWAY")    (setq dashboard-set-file-icons t)    (setq dashboard-set-heading-icons t)    (setq dashboard-startup-banner "~/banner.png")    (setq dashboard-set-navigator t)    ;; format: "(icon title help action face prefix sufix)"    (setq dashboard-navigator-buttons	  `(;; lin1	    ((,nil	      "init file"	      "Open init file"	      (lambda (&rest _) (find-file "~/.emacs"))	      )))	  )    )  :config  (dashboard-setup-startup-hook))(use-package treemacs  :ensure t  :config  (setq treemacs-is-never-other-window t))